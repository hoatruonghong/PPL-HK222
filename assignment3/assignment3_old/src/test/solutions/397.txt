Program([
	FuncDecl(main, VoidType, [], None, BlockStmt([VarDecl(a, FloatType), VarDecl(b, FloatType), VarDecl(c, FloatType), VarDecl(delta, FloatType), VarDecl(root1, FloatType), VarDecl(root2, FloatType), VarDecl(realPart, FloatType), VarDecl(iPart, FloatType), CallStmt(printString, StringLit(Enter coefficients a, b, c: )), AssignStmt(Id(a), FuncCall(readFloat, [])), AssignStmt(Id(b), FuncCall(readFloat, [])), AssignStmt(Id(c), FuncCall(readFloat, [])), AssignStmt(Id(delta), BinExpr(-, BinExpr(*, Id(b), Id(n)), BinExpr(*, BinExpr(*, IntegerLit(4), Id(a)), Id(c)))), IfStmt(BinExpr(>, Id(delta), IntegerLit(0)), BlockStmt([AssignStmt(Id(root1), BinExpr(/, BinExpr(+, UnExpr(<class 'str'>, Id(b)), FuncCall(sqrt, [Id(delta)])), BinExpr(*, IntegerLit(2), Id(a)))), AssignStmt(Id(root2), BinExpr(/, BinExpr(-, UnExpr(<class 'str'>, Id(b)), FuncCall(sqrt, [Id(delta)])), BinExpr(*, IntegerLit(2), Id(a)))), CallStmt(print, StringLit(root1 = ), Id(root1), StringLit( and root2 = ), Id(root2))]), IfStmt(BinExpr(==, Id(delta), IntegerLit(0)), BlockStmt([AssignStmt(Id(root1), BinExpr(/, UnExpr(<class 'str'>, Id(b)), BinExpr(*, IntegerLit(2), Id(a)))), AssignStmt(Id(root2), Id(root1)), CallStmt(print, StringLit(root1 = ), Id(root1), StringLit( and root2 = ), Id(root2))]), BlockStmt([AssignStmt(Id(realPart), BinExpr(/, UnExpr(<class 'str'>, Id(b)), BinExpr(*, IntegerLit(2), Id(a)))), AssignStmt(Id(iPart), BinExpr(/, FuncCall(sqrt, [UnExpr(<class 'str'>, Id(delta))]), BinExpr(*, IntegerLit(2), Id(a)))), CallStmt(print, StringLit(root1 = ), BinExpr(+, Id(realPart), Id(iPart)), StringLit( and root2 = ), BinExpr(-, Id(realPart), Id(iPart)))])))]))
])